model Artist {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @map("artist_id") @db.Uuid
  name              String
  nameForSorting    String?    @map("name_for_sorting")
  partOfQueenFamily Boolean    @default(false) @map("part_of_queen_family")
  type              ArtistType
  otherNames        String[]   @map("other_names")

  parentArtists ParentArtist[] @relation("ParentArtist")
  childArtists  ParentArtist[] @relation("ChildArtist")

  entries EntryArtist[]

  @@map("artists")
}

model ParentArtist {
  parentArtistId String @map("parent_artist_id") @db.Uuid
  childArtistId  String @map("child_artist_id") @db.Uuid

  parentArtist Artist @relation("ParentArtist", fields: [parentArtistId], references: [id])
  childArtist  Artist @relation("ChildArtist", fields: [childArtistId], references: [id])

  @@id([parentArtistId, childArtistId])
  @@map("parent_artists")
}

enum ArtistType {
  BAND
  ARTIST
  ORCHESTRA
  DUET
  SHOW_CAST
  COMPOSER
  SONG_WRITER
  SONG_WRITER_TEAM
  DIRECTOR
  SERIES_CREATOR
  COLLABORATION
  CHOREOGRAPHER
  CONDUCTOR
  VARIOUS_ARTISTS
}
